rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Funciones de utilidad
    function isSuperAdmin() {
      return request.auth != null && request.auth.token.email == 'dgonzalezuy@hotmail.com';
    }

    function isClubOwner(clubId) {
      return request.auth != null && request.auth.uid == clubId;
    }

    function isPlayerInCategory(clubId, categoryId) {
      let playerDoc = get(/databases/$(database)/documents/clubs/$(clubId)/players/$(request.auth.uid));
      return playerDoc != null && playerDoc.data.categoryId == categoryId;
    }

    function isClubPlayer(clubId) {
      return request.auth != null && 
        exists(/databases/$(database)/documents/clubs/$(clubId)/players/$(request.auth.uid));
    }

    function canAccessNotifications(clubId, categoryId) {
      return request.auth != null && (
        isClubOwner(clubId) || 
        (isClubPlayer(clubId) && (categoryId == 'all' || isPlayerInCategory(clubId, categoryId)))
      );
    }

    // Reglas para clubes
    match /clubs/{clubId} {
      allow read: if true;
      allow read, update: if request.auth != null && request.auth.uid == clubId;
      allow create: if request.auth != null;
      allow delete: if isSuperAdmin();

      // Reglas para notificaciones
      match /notifications/{notificationId} {
        // Permitir lectura a jugadores del club si la notificación es para su categoría o para todos
        allow read: if request.auth != null && (
          isClubOwner(clubId) || 
          (isClubPlayer(clubId) && (
            resource.data.categoryId == 'all' || 
            isPlayerInCategory(clubId, resource.data.categoryId)
          ))
        );
        
        // Solo el club puede crear/actualizar/eliminar notificaciones
        allow create, update, delete: if request.auth != null && isClubOwner(clubId);
        
        // Validar el formato de los datos al crear/actualizar
        allow create, update: if request.auth != null && isClubOwner(clubId) && 
          request.resource.data.keys().hasAll(['title', 'message', 'categoryId', 'createdAt']) &&
          request.resource.data.title is string &&
          request.resource.data.message is string &&
          request.resource.data.categoryId is string &&
          request.resource.data.createdAt is string;
      }

      // Reglas para jugadores
      match /players/{playerId} {
        allow read: if true;
        allow write, read: if request.auth != null && request.auth.uid == clubId;
        allow read: if request.auth != null && request.auth.uid == playerId;
      }

      // Reglas para categorías
      match /categories/{categoryId} {
        allow read, write: if request.auth != null && request.auth.uid == clubId;
        allow read, write: if isSuperAdmin();
        allow read: if isClubPlayer(clubId);
      }
    }
  }
}